---
import { Image } from "astro:assets";
import GetIcon from "./Icons/GetIcon.astro";

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/galery/*.avif"
);
const importImages = Object.values(images);
---

<section id="Galeria" class="container min-h-[calc(70vh)] pt-24">
  <h3 class="text-4xl font-bold text-center dark:text-white">Galeria</h3>
  <div class="w-full grid grid_cols-1 min-[374px]:grid-cols-3 gap-4 mt-16">
    {
      importImages.map((e, i) =>
        e().then((val) => {
          return (
            <button
              class:list={[
                "overflow-hidden rounded-xl imgButton cursor-pointer",
                { "min-[374px]:col-span-2 ": i % 4 === 0 || i % 4 === 3 },
              ]}
              data-src={val.default.src}
            >
              <Image
                src={val.default}
                alt={`Imagen de la galeria ${i}`}
                class="object-cover w-full h-full scale-110 hover:scale-100 transition-all duration-300 ease-in-out animate-pulse bg-gray-600/50"
              />
            </button>
          );
        })
      )
    }
  </div>
  <!-- <dialog
  id="dialogImage"
  class="bg-transparent animate-modalf fixed inset-0 flex justify-center items-center z-50 p-4"
> -->
<dialog
id="dialogImage"
class="fixed inset-0 m-auto rounded-lg shadow-lg bg-transparent animate-modalf"
>
  <div class="max-w-[1400px] w-full h-full max-h-[90vh]" id="dialogDiv">
    <img
      id="imageExtendida"
      alt="Imagen de la galeria extendida"
      class="w-full h-full object-contain rounded-xl"
    />
    <button
      id="imgDialogClose"
      class="fixed cursor-pointer top-8 right-8 p-2 text-gray-200 hover:bg-gray-100/10 dark:hover:bg-gray-100/10 transition-all duration-300 ease-in-out rounded-md"
    >
      <GetIcon icon="Cruz" />
    </button>
  </div>
</dialog>

</section>
<script>
  document
    .querySelectorAll(".animate-pulse")
    .forEach((e) => e.classList.remove("animate-pulse"));
  const dialogImage = document.getElementById("dialogImage") as HTMLDialogElement;
  const imageExtendida = document.getElementById("imageExtendida") as HTMLImageElement;
  const dialogDiv = document.getElementById("dialogDiv") as HTMLImageElement;
  dialogImage.addEventListener("click", () => {
    document.body.style.overflow = "auto";
    imageExtendida.src = "";
    dialogImage.close();
  });
  // dialogDiv.addEventListener("click", (e) => e.stopPropagation());
  const showDialog = (src: string) => {
    document.body.style.overflow = "hidden";
    imageExtendida.src = src ?? "";
    dialogImage.showModal();
  };
  const buttons = document.querySelectorAll(".imgButton");
  buttons.forEach((e) => {
    const src = e.getAttribute("data-src");
    e.addEventListener("click", () => showDialog(src!));
  });
  document.getElementById("imgDialogClose")!.addEventListener("click", () => {
    document.body.style.overflow = "auto";
    imageExtendida.src = "";
    dialogImage.close();
  });
</script>
<style>
  dialog::backdrop {
    backdrop-filter: blur(2px);
    background-color: rgba(0, 0, 0, 0.5);
  }
</style>
