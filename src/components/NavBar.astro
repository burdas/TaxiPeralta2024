---
import { routeList } from "../model/navbar.ts";
import ThemeButton from "./ThemeButton.astro";
import { Image } from "astro:assets";
import logoImage from "../assets/logo.jpg";
import DialogMenu from "./DialogMenu.astro";

const { scrollLimit, disableTheme } = Astro.props;

---
<header
  class="sticky z-50 top-0 w-full py-3 transition-color duration-300 ease-out"
  data-scroll={scrollLimit}
>
  <nav class="flex flex-row justify-between place-items-center container">
    <a class="inline-flex place-items-center p-2" href="./">
      <Image
        src={logoImage}
        alt="logo de taxi peralta"
        class="h-10 w-10 rounded-sm"
      />
      <p class="text-xl text-nowrap font-bold dark:text-white px-3">
        Taxi Peralta
      </p>
    </a>
    <div
      class="hidden lg:flex flex-row justify-center w-full place-items-center gap-3"
    >
      {
        routeList.map(({ href, label }) => (
          <a
            href={href}
            class="font-medium text-sm rounded-md py-2 px-3 dark:text-white hover:bg-gray-100 dark:hover:bg-gray-100/10 transition-all duration-300 ease-in-out"
          >
            {label}
          </a>
        ))
      }
    </div>
    <div class="flex flex-row">
      {!disableTheme && <ThemeButton />}
      <button
        class="lg:hidden hover:bg-gray-100 dark:hover:bg-gray-100/10 p-3 rounded-md transition-colors duration-300 ease-in-out"
        id="dialogTrigger"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="15"
          height="15"
          fill="none"
          class="dark:text-white"
          ><path
            fill="currentColor"
            fill-rule="evenodd"
            d="M1.5 3a.5.5 0 0 0 0 1h12a.5.5 0 0 0 0-1h-12ZM1 7.5a.5.5 0 0 1 .5-.5h12a.5.5 0 0 1 0 1h-12a.5.5 0 0 1-.5-.5Zm0 4a.5.5 0 0 1 .5-.5h12a.5.5 0 0 1 0 1h-12a.5.5 0 0 1-.5-.5Z"
            clip-rule="evenodd"></path></svg
        >
      </button>
    </div>
  </nav>
</header>
<DialogMenu disableTheme={disableTheme} />
<script>
  const dialogTrigger = document.getElementById("dialogTrigger");
  const dialog = document.getElementById("dialogMenu") as HTMLDialogElement;
  dialogTrigger!.addEventListener("click", () => {
    document.body.style.overflow = "hidden";
    dialog.showModal();
  });
  const visibleOnScroll = () => {
    const nav = document.querySelector("header")!;
    if (window.scrollY > parseInt(nav.dataset.scroll!)) {
      nav.classList.add("bg-white");
      nav.classList.add("dark:bg-black");
    } else {
      nav.classList.remove("bg-white");
      nav.classList.remove("dark:bg-black");
    }
  };
  visibleOnScroll(); // Cuando se recarga la pagina
  window.addEventListener("scroll", visibleOnScroll); // Cuando se hace scroll
</script>
